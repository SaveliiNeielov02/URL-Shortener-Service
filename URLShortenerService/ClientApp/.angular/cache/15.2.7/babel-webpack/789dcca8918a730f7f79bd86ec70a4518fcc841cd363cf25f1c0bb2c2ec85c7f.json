{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth-service/auth-service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ShortURLsTableComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ShortURLsTableComponent_form_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function ShortURLsTableComponent_form_6_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"label\", 7);\n    i0.ɵɵtext(2, \"New URL to short:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function ShortURLsTableComponent_form_6_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.AdditionURL = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 9);\n    i0.ɵɵtext(5, \"Shorten\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.AdditionURL);\n  }\n}\nfunction ShortURLsTableComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵtext(1, \"Delete all records\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShortURLsTableComponent_table_8_tr_9_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ShortURLsTableComponent_table_8_tr_9_td_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const record_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onDeleteButtonClick(record_r8.ShortURL));\n    });\n    i0.ɵɵtext(2, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ShortURLsTableComponent_table_8_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ShortURLsTableComponent_table_8_tr_9_td_5_Template, 3, 0, \"td\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r8.LongURL);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r8.ShortURL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r7.authService.isAdmin() || ctx_r7.authService.isOrdinary()) && ctx_r7.authService.getLogin() == record_r8.UserLogin);\n  }\n}\nfunction ShortURLsTableComponent_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"LongURL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"ShortURL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, ShortURLsTableComponent_table_8_tr_9_Template, 6, 3, \"tr\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.records);\n  }\n}\nexport class ShortURLsTableComponent {\n  constructor(authService, http, baseUrl) {\n    this.authService = authService;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.records = [];\n    this.AdditionURL = '';\n    this.updateRecords();\n  }\n  onSubmit() {\n    const url = `${this.baseUrl}urlservice/ShortenURL`;\n    const postData = {\n      LongURL: this.AdditionURL,\n      UserLogin: this.authService.getLogin(),\n      CreatedDate: new Date()\n    };\n    this.http.post(url, postData).subscribe(data => {\n      this.updateRecords();\n      const formattedData = data;\n      alert(formattedData.message);\n    }, error => {\n      const formattedError = error;\n      alert(formattedError.message);\n    });\n  }\n  onDeleteButtonClick(shortURL) {}\n  updateRecords() {\n    this.http.get(this.baseUrl + 'urlservice/GetRecords').subscribe(result => {\n      this.records = result;\n    }, error => alert(error));\n  }\n}\nShortURLsTableComponent.ɵfac = function ShortURLsTableComponent_Factory(t) {\n  return new (t || ShortURLsTableComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nShortURLsTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShortURLsTableComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [1, \"form-wrapper\"], [3, \"ngSubmit\", 4, \"ngIf\"], [\"type\", \"submit\", \"style\", \"width:10%;\", 4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"for\", \"AdditionURL\"], [\"type\", \"text\", \"id\", \"AdditionURL\", \"name\", \"AdditionURL\", \"required\", \"\", 2, \"width\", \"90%\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 2, \"width\", \"10%\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [2, \"width\", \"90%\", 3, \"click\"]],\n  template: function ShortURLsTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"ShorterURL Table\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component contains short urls-list.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, ShortURLsTableComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵtemplate(6, ShortURLsTableComponent_form_6_Template, 6, 1, \"form\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ShortURLsTableComponent_button_7_Template, 2, 0, \"button\", 4);\n      i0.ɵɵtemplate(8, ShortURLsTableComponent_table_8_Template, 10, 1, \"table\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.records);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.authService.isAdmin() || ctx.authService.isOrdinary());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authService.isAdmin());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.records);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\".form-wrapper[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  display: flex; \\r\\n  align-items: center; \\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  width: 10%; \\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] { \\r\\n  width: 90%; \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvcnQtdXJscy10YWJsZS9zaG9ydC11cmxzLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxVQUFVO0FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmZvcm0td3JhcHBlciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZGlzcGxheTogZmxleDsgXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwJTsgXHJcbn1cclxuXHJcbmZvcm0geyBcclxuICB3aWR0aDogOTAlOyBcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ShortURLsTableComponent","constructor","authService","http","baseUrl","updateRecords","onSubmit","url","postData","LongURL","AdditionURL","UserLogin","getLogin","CreatedDate","Date","post","subscribe","data","formattedData","alert","message","error","formattedError","onDeleteButtonClick","shortURL","get","result","records","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\VisualStudio2022\\URLShortenerService\\URLShortenerService\\ClientApp\\src\\app\\short-urls-table\\short-urls-table.component.html","E:\\VisualStudio2022\\URLShortenerService\\URLShortenerService\\ClientApp\\src\\app\\short-urls-table\\short-urls-table.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">ShorterURL Table</h1>\r\n\r\n<p>This component contains short urls-list.</p>\r\n\r\n<p *ngIf=\"!records\"><em>Loading...</em></p>\r\n\r\n<div class=\"form-wrapper\">\r\n  <form *ngIf=\"authService.isAdmin() || authService.isOrdinary()\" (ngSubmit)=\"onSubmit()\">\r\n    <label for=\"AdditionURL\">New URL to short:</label>\r\n    <input style=\"width:90%;\" type=\"text\" id=\"AdditionURL\" name=\"AdditionURL\" [(ngModel)]=\"AdditionURL\" required>\r\n    <button type=\"submit\" style=\"width:10%;\">Shorten</button>\r\n  </form>\r\n</div>\r\n<button *ngIf=\"authService.isAdmin()\" type=\"submit\" style=\"width:10%;\">Delete all records</button>\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"records\">\r\n  <thead>\r\n    <tr>\r\n      <th>LongURL</th>\r\n      <th>ShortURL</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let record of records\">\r\n      <td>{{ record.LongURL }}</td>\r\n      <td>{{ record.ShortURL }}</td>\r\n      <td *ngIf=\"(authService.isAdmin() || authService.isOrdinary()) && authService.getLogin() == record.UserLogin\">\r\n        <button (click)=\"onDeleteButtonClick(record.ShortURL)\" style=\"width:90%;\">Удалить запись</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth-service/auth-service';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './short-urls-table.component.html',\r\n  styleUrls: ['./short-urls-table.component.css']\r\n})\r\nexport class ShortURLsTableComponent {\r\n  public records: URLRecord[] = [];\r\n  public AdditionURL: string = '';\r\n  constructor(public authService: AuthService, public http: HttpClient, @Inject('BASE_URL') public baseUrl: string) {\r\n    this.updateRecords();\r\n  }\r\n  onSubmit() {\r\n    const url = `${this.baseUrl}urlservice/ShortenURL`;\r\n    const postData= {\r\n      LongURL: this.AdditionURL,\r\n      UserLogin: this.authService.getLogin(),\r\n      CreatedDate: new Date(),\r\n    };\r\n\r\n    this.http.post<any>(url, postData).subscribe(\r\n      data => {\r\n        this.updateRecords();\r\n        const formattedData = data as { message: string };\r\n        alert(formattedData.message);\r\n      },\r\n      error => {\r\n        const formattedError = error as { message: string };\r\n        alert(formattedError.message);\r\n      }\r\n    )\r\n  }\r\n  public onDeleteButtonClick(shortURL: any){\r\n\r\n  }\r\n  private updateRecords()\r\n  {\r\n    this.http.get<URLRecord[]>(this.baseUrl + 'urlservice/GetRecords').subscribe(\r\n      result => {\r\n        this.records = result;\r\n      },\r\n      error => alert(error));\r\n  }\r\n}\r\n\r\ninterface URLRecord {\r\n  ShortURL?: string;\r\n  LongURL: string;\r\n  UserLogin: string;\r\n  CreatedDate: Date,\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}