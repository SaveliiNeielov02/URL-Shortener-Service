{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth-service/auth-service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const record_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r3.URL);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, FetchDataComponent_table_5_tr_8_Template, 3, 1, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.records);\n  }\n}\nexport class FetchDataComponent {\n  constructor(authService, http, baseUrl) {\n    this.records = [];\n    http.get(baseUrl + 'urlservice/GetRecords').subscribe(result => {\n      this.records = result;\n    }, error => alert(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 9, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.records);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.records);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAIAA,yBAAoB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAUnCA,0BAAmC;IAC7BA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,mCAAgB;;;;;IAT1BA,gCAAgF;IAGtEA,mBAAG;IAAAA,iBAAK;IACZA,0BAAI;IAAAA,uBAAO;IAAAA,iBAAK;IAGpBA,6BAAO;IACLA,yEAEK;IACPA,iBAAQ;;;;IAHiBA,eAAU;IAAVA,wCAAU;;;ACPrC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,WAAwB,EAAEC,IAAgB,EAAsBC,OAAe;IAFpF,YAAO,GAAgB,EAAE;IAG9BD,IAAI,CAACE,GAAG,CAAcD,OAAO,GAAG,uBAAuB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,OAAO,GAAGD,MAAM;IACvB,CAAC,EAAEE,KAAK,IAAIC,KAAK,CAACD,KAAK,CAAC,CAAC;EAC3B;;AAPWT,kBAAkB;mBAAlBA,kBAAkB,kGAGmC,UAAU;AAAA;AAH/DA,kBAAkB;QAAlBA,kBAAkB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/BhB,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAA2C;MAE3CA,uEAYQ;;;MAdJA,eAAc;MAAdA,mCAAc;MAE+CA,eAAa;MAAbA,kCAAa","names":["i0","FetchDataComponent","constructor","authService","http","baseUrl","get","subscribe","result","records","error","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\VisualStudio2022\\URLShortenerService\\URLShortenerService\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","E:\\VisualStudio2022\\URLShortenerService\\URLShortenerService\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!records\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"records\">\r\n  <thead>\r\n    <tr>\r\n      <th>URL</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let record of records\">\r\n      <td>{{ record.URL }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth-service/auth-service';\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public records: URLRecord[] = [];\r\n\r\n  constructor(authService: AuthService, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<URLRecord[]>(baseUrl + 'urlservice/GetRecords').subscribe(result => {\r\n      this.records = result;\r\n    }, error => alert(error));\r\n  }\r\n}\r\n\r\ninterface URLRecord {\r\n  URL: string;\r\n  UserLogin: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}